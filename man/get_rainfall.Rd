% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_frequencies.R
\name{get_rainfall}
\alias{get_rainfall}
\title{Get rainfall}
\usage{
get_rainfall(
  sources = NULL,
  location = NULL,
  durations = NULL,
  frequencies = NULL,
  unit = c("lsha", "mm"),
  fields = NULL,
  version = "v0",
  format = c("jsonld", "csv"),
  client = get_frost_client(),
  auth_type = c("basic", "oauth"),
  simplify = TRUE,
  return_response = FALSE
)
}
\arguments{
\item{sources}{character: Source (station) ID, e.g. 'SN18700'.}

\item{location}{character: Geographic position from which to get IDF data, in the
following format "POINT(<longitude degrees> <latitude degrees>)".}

\item{durations}{character: IDF duration(s), in minutes.}

\item{frequencies}{character: IDF frequencies, in years.}

\item{unit}{character: Unit of measure for the intensity, either 'mm' or 'lsha'.}

\item{fields}{character: Fields to return in the response.}

\item{version}{character: API version.}

\item{format}{character: Response format.}

\item{client}{list: List with client id and secret. Defaults to the
`MET_FROST_ID` and `MET_FROST_SECRET` environment variables.}

\item{auth_type}{character: Authentication method, either 'basic' or 'oauth'.}

\item{simplify}{logical: If TRUE the response is transformed to a standardized table.}

\item{return_response}{logical: If TRUE a list of class `frost_api` is
returned, including the raw `httr2_response`.}
}
\value{
tibble or list
}
\description{
Get rainfall IDF data.
}
\examples{
\dontrun{
df <- get_rainfall()
}
}
